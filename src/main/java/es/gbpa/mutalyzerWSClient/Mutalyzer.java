
package es.gbpa.mutalyzerWSClient;

import java.math.BigInteger;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "Mutalyzer", targetNamespace = "http://mutalyzer.nl/2.0/services")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface Mutalyzer {


    /**
     * 
     *         Search for an NM number in the MySQL database, if the version
     *         number matches, get the start and end positions in a variant and
     *         translate these positions to I{g.} notation if the variant is in I{c.}
     *         notation and vice versa.
     * 
     *           - If no end position is present, the start position is assumed to be
     *             the end position.
     *           - If the version number is not found in the database, an error
     *             message is generated and a suggestion for an other version is
     *             given.
     *           - If the reference sequence is not found at all, an error is
     *             returned.
     *           - If no variant is present, an error is returned.
     *           - If the variant is not accepted by the nomenclature parser, a parse
     *             error will be printed.
     * 
     *         @arg LOVD_ver: The LOVD version.
     *         @type LOVD_ver: string
     *         @arg build: The genome build (hg19, hg18, mm10).
     *         @type build: string
     *         @arg accNo: The NM accession number and version.
     *         @type accNo: string
     *         @arg variant: The variant.
     *         @type variant: string
     * 
     *         @return: Complex object:
     *           - start_main   ; The main coordinate of the start position
     *                            in I{c.} (non-star) notation.
     *           - start_offset ; The offset coordinate of the start position
     *                            in I{c.} notation (intronic position).
     *           - end_main     ; The main coordinate of the end position in
     *                            I{c.} (non-star) notation.
     *           - end_offset   ; The offset coordinate of the end position in
     *                            I{c.} notation (intronic position).
     *           - start_g      ; The I{g.} notation of the start position.
     *           - end_g        ; The I{g.} notation of the end position.
     *           - type         ; The mutation type.
     *         @rtype: object
     *         
     * 
     * @param accNo
     * @param lovdVer
     * @param build
     * @param variant
     * @return
     *     returns es.gbpa.mutalyzerWSClient.Mapping
     */
    @WebMethod(action = "mappingInfo")
    @WebResult(name = "mappingInfoResult", targetNamespace = "http://mutalyzer.nl/2.0/services")
    @RequestWrapper(localName = "mappingInfo", targetNamespace = "http://mutalyzer.nl/2.0/services", className = "es.gbpa.mutalyzerWSClient.MappingInfo")
    @ResponseWrapper(localName = "mappingInfoResponse", targetNamespace = "http://mutalyzer.nl/2.0/services", className = "es.gbpa.mutalyzerWSClient.MappingInfoResponse")
    public Mapping mappingInfo(
        @WebParam(name = "LOVD_ver", targetNamespace = "http://mutalyzer.nl/2.0/services")
        String lovdVer,
        @WebParam(name = "build", targetNamespace = "http://mutalyzer.nl/2.0/services")
        String build,
        @WebParam(name = "accNo", targetNamespace = "http://mutalyzer.nl/2.0/services")
        String accNo,
        @WebParam(name = "variant", targetNamespace = "http://mutalyzer.nl/2.0/services")
        String variant);

    /**
     * 
     *         Todo: documentation.
     *         
     * 
     * @param transcriptReference
     * @param genomicReference
     * @return
     *     returns es.gbpa.mutalyzerWSClient.TranscriptNameInfo
     */
    @WebMethod(action = "getGeneAndTranscript")
    @WebResult(name = "getGeneAndTranscriptResult", targetNamespace = "http://mutalyzer.nl/2.0/services")
    @RequestWrapper(localName = "getGeneAndTranscript", targetNamespace = "http://mutalyzer.nl/2.0/services", className = "es.gbpa.mutalyzerWSClient.GetGeneAndTranscript")
    @ResponseWrapper(localName = "getGeneAndTranscriptResponse", targetNamespace = "http://mutalyzer.nl/2.0/services", className = "es.gbpa.mutalyzerWSClient.GetGeneAndTranscriptResponse")
    public TranscriptNameInfo getGeneAndTranscript(
        @WebParam(name = "genomicReference", targetNamespace = "http://mutalyzer.nl/2.0/services")
        String genomicReference,
        @WebParam(name = "transcriptReference", targetNamespace = "http://mutalyzer.nl/2.0/services")
        String transcriptReference);

    /**
     * 
     *         Given a genomic reference, return all its transcripts with their
     *         transcription/cds start/end sites and exons.
     * 
     *         @arg genomicReference: Name of a reference sequence.
     *         @type genomicReference: string
     * 
     *         @arg geneName: Name of gene to restrict returned transcripts to.
     *                        Default is to return all transcripts.
     *         @type geneName: string
     * 
     *         @return: Array of TranscriptInfo objects with fields:
     *                  - name
     *                  - id
     *                  - product
     *                  - cTransStart
     *                  - gTransStart
     *                  - chromTransStart
     *                  - cTransEnd
     *                  - gTransEnd
     *                  - chromTransEnd
     *                  - sortableTransEnd
     *                  - cCDSStart
     *                  - gCDSStart
     *                  - chromCDSStart
     *                  - cCDSStop
     *                  - gCDSStop
     *                  - chromCDSStop
     *                  - locusTag
     *                  - linkMethod
     *                  - exons: Array of ExonInfo objects with fields:
     *                           - cStart
     *                           - gStart
     *                           - chromStart
     *                           - cStop
     *                           - gStop
     *                           - chromStop
     *                  - proteinTranscript: ProteinTranscript object with fields:
     *                                       - name
     *                                       - id
     *                                       - product
     *         
     * 
     * @param geneName
     * @param genomicReference
     * @return
     *     returns es.gbpa.mutalyzerWSClient.TranscriptInfoArray
     */
    @WebMethod(action = "getTranscriptsAndInfo")
    @WebResult(name = "getTranscriptsAndInfoResult", targetNamespace = "http://mutalyzer.nl/2.0/services")
    @RequestWrapper(localName = "getTranscriptsAndInfo", targetNamespace = "http://mutalyzer.nl/2.0/services", className = "es.gbpa.mutalyzerWSClient.GetTranscriptsAndInfo")
    @ResponseWrapper(localName = "getTranscriptsAndInfoResponse", targetNamespace = "http://mutalyzer.nl/2.0/services", className = "es.gbpa.mutalyzerWSClient.GetTranscriptsAndInfoResponse")
    public TranscriptInfoArray getTranscriptsAndInfo(
        @WebParam(name = "genomicReference", targetNamespace = "http://mutalyzer.nl/2.0/services")
        String genomicReference,
        @WebParam(name = "geneName", targetNamespace = "http://mutalyzer.nl/2.0/services")
        String geneName);

    /**
     * 
     *         Converts I{c.} to I{g.} notation or vice versa
     * 
     *         @arg build: The genome build (hg19, hg18, mm10).
     *         @type build: string
     *         @arg variant: The variant in either I{c.} or I{g.} notation, full HGVS
     *             notation, including NM_ or NC_ accession number.
     *         @type variant: string
     *         @kwarg gene: Optional gene name. If given, return variant descriptions
     *             on all transcripts for this gene.
     *         @type gene: string
     * 
     *         @return: The variant(s) in either I{g.} or I{c.} notation.
     *         @rtype: list
     *         
     * 
     * @param gene
     * @param build
     * @param variant
     * @return
     *     returns es.gbpa.mutalyzerWSClient.StringArray
     */
    @WebMethod(action = "numberConversion")
    @WebResult(name = "numberConversionResult", targetNamespace = "http://mutalyzer.nl/2.0/services")
    @RequestWrapper(localName = "numberConversion", targetNamespace = "http://mutalyzer.nl/2.0/services", className = "es.gbpa.mutalyzerWSClient.NumberConversion")
    @ResponseWrapper(localName = "numberConversionResponse", targetNamespace = "http://mutalyzer.nl/2.0/services", className = "es.gbpa.mutalyzerWSClient.NumberConversionResponse")
    public StringArray numberConversion(
        @WebParam(name = "build", targetNamespace = "http://mutalyzer.nl/2.0/services")
        String build,
        @WebParam(name = "variant", targetNamespace = "http://mutalyzer.nl/2.0/services")
        String variant,
        @WebParam(name = "gene", targetNamespace = "http://mutalyzer.nl/2.0/services")
        String gene);

    /**
     * 
     *         Todo: documentation.
     *         
     * 
     * @param name
     * @param build
     * @return
     *     returns es.gbpa.mutalyzerWSClient.StringArray
     */
    @WebMethod(action = "getTranscriptsByGeneName")
    @WebResult(name = "getTranscriptsByGeneNameResult", targetNamespace = "http://mutalyzer.nl/2.0/services")
    @RequestWrapper(localName = "getTranscriptsByGeneName", targetNamespace = "http://mutalyzer.nl/2.0/services", className = "es.gbpa.mutalyzerWSClient.GetTranscriptsByGeneName")
    @ResponseWrapper(localName = "getTranscriptsByGeneNameResponse", targetNamespace = "http://mutalyzer.nl/2.0/services", className = "es.gbpa.mutalyzerWSClient.GetTranscriptsByGeneNameResponse")
    public StringArray getTranscriptsByGeneName(
        @WebParam(name = "build", targetNamespace = "http://mutalyzer.nl/2.0/services")
        String build,
        @WebParam(name = "name", targetNamespace = "http://mutalyzer.nl/2.0/services")
        String name);

    /**
     * 
     *         Not implemented yet.
     *         
     * 
     * @param url
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "uploadGenBankRemoteFile")
    @WebResult(name = "uploadGenBankRemoteFileResult", targetNamespace = "http://mutalyzer.nl/2.0/services")
    @RequestWrapper(localName = "uploadGenBankRemoteFile", targetNamespace = "http://mutalyzer.nl/2.0/services", className = "es.gbpa.mutalyzerWSClient.UploadGenBankRemoteFile")
    @ResponseWrapper(localName = "uploadGenBankRemoteFileResponse", targetNamespace = "http://mutalyzer.nl/2.0/services", className = "es.gbpa.mutalyzerWSClient.UploadGenBankRemoteFileResponse")
    public String uploadGenBankRemoteFile(
        @WebParam(name = "url", targetNamespace = "http://mutalyzer.nl/2.0/services")
        String url);

    /**
     * 
     *         Simple function to test the interface.
     * 
     *         @return: Always the value 'pong'.
     *         @rtype: string
     *         
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "ping")
    @WebResult(name = "pingResult", targetNamespace = "http://mutalyzer.nl/2.0/services")
    @RequestWrapper(localName = "ping", targetNamespace = "http://mutalyzer.nl/2.0/services", className = "es.gbpa.mutalyzerWSClient.Ping")
    @ResponseWrapper(localName = "pingResponse", targetNamespace = "http://mutalyzer.nl/2.0/services", className = "es.gbpa.mutalyzerWSClient.PingResponse")
    public String ping();

    /**
     * 
     *         Todo: documentation, error handling, argument checking, tests.
     * 
     *         @arg orientation: Orientation of the slice. 1 for forward, 2 for
     *             reverse complement.
     *         @type orientation: integer
     *         
     * 
     * @param orientation
     * @param start
     * @param chromAccNo
     * @param end
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "sliceChromosome")
    @WebResult(name = "sliceChromosomeResult", targetNamespace = "http://mutalyzer.nl/2.0/services")
    @RequestWrapper(localName = "sliceChromosome", targetNamespace = "http://mutalyzer.nl/2.0/services", className = "es.gbpa.mutalyzerWSClient.SliceChromosome")
    @ResponseWrapper(localName = "sliceChromosomeResponse", targetNamespace = "http://mutalyzer.nl/2.0/services", className = "es.gbpa.mutalyzerWSClient.SliceChromosomeResponse")
    public String sliceChromosome(
        @WebParam(name = "chromAccNo", targetNamespace = "http://mutalyzer.nl/2.0/services")
        String chromAccNo,
        @WebParam(name = "start", targetNamespace = "http://mutalyzer.nl/2.0/services")
        BigInteger start,
        @WebParam(name = "end", targetNamespace = "http://mutalyzer.nl/2.0/services")
        BigInteger end,
        @WebParam(name = "orientation", targetNamespace = "http://mutalyzer.nl/2.0/services")
        BigInteger orientation);

    /**
     * 
     *         Submit a batch job.
     * 
     *         Input and output file formats for batch jobs are explained on the
     *         website <https://mutalyzer.nl/batch>.
     * 
     *         On error an exception is raised:
     *           - detail: Human readable description of the error.
     *           - faultstring: A code to indicate the type of error.
     *               - EPARSE: The batch input could not be parsed.
     *               - EMAXSIZE: Input file exceeds maximum size.
     * 
     *         @arg data: Input file (base64 encoded).
     *         @arg process: Optional type of the batch job, choose from: NameChecker
     *             (default), SyntaxChecker, PositionConverter, SnpConverter.
     *         @arg argument: Additional argument. Currently only used if batch_type
     *             is PositionConverter, denoting the human genome build.
     * 
     *         @return: Batch job identifier.
     *         
     * 
     * @param argument
     * @param process
     * @param data
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "submitBatchJob")
    @WebResult(name = "submitBatchJobResult", targetNamespace = "http://mutalyzer.nl/2.0/services")
    @RequestWrapper(localName = "submitBatchJob", targetNamespace = "http://mutalyzer.nl/2.0/services", className = "es.gbpa.mutalyzerWSClient.SubmitBatchJob")
    @ResponseWrapper(localName = "submitBatchJobResponse", targetNamespace = "http://mutalyzer.nl/2.0/services", className = "es.gbpa.mutalyzerWSClient.SubmitBatchJobResponse")
    public String submitBatchJob(
        @WebParam(name = "data", targetNamespace = "http://mutalyzer.nl/2.0/services")
        byte[] data,
        @WebParam(name = "process", targetNamespace = "http://mutalyzer.nl/2.0/services")
        String process,
        @WebParam(name = "argument", targetNamespace = "http://mutalyzer.nl/2.0/services")
        String argument);

    /**
     * 
     *         Upload a genbank file.
     * 
     *         @arg data: Genbank file (base64 encoded).
     *         @return: UD accession number for the uploaded genbank file.
     *         
     * 
     * @param data
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "uploadGenBankLocalFile")
    @WebResult(name = "uploadGenBankLocalFileResult", targetNamespace = "http://mutalyzer.nl/2.0/services")
    @RequestWrapper(localName = "uploadGenBankLocalFile", targetNamespace = "http://mutalyzer.nl/2.0/services", className = "es.gbpa.mutalyzerWSClient.UploadGenBankLocalFile")
    @ResponseWrapper(localName = "uploadGenBankLocalFileResponse", targetNamespace = "http://mutalyzer.nl/2.0/services", className = "es.gbpa.mutalyzerWSClient.UploadGenBankLocalFileResponse")
    public String uploadGenBankLocalFile(
        @WebParam(name = "data", targetNamespace = "http://mutalyzer.nl/2.0/services")
        byte[] data);

    /**
     * 
     *         Get the accession number of a chromosome, given a name.
     * 
     *         @arg build: The genome build (hg19, hg18, mm10).
     *         @type build: string
     *         @arg name: The name of a chromosome (e.g. chr1).
     *         @type name: string
     * 
     *         @return: The accession number of a chromosome.
     *         @rtype: string
     *         
     * 
     * @param name
     * @param build
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "chromAccession")
    @WebResult(name = "chromAccessionResult", targetNamespace = "http://mutalyzer.nl/2.0/services")
    @RequestWrapper(localName = "chromAccession", targetNamespace = "http://mutalyzer.nl/2.0/services", className = "es.gbpa.mutalyzerWSClient.ChromAccession")
    @ResponseWrapper(localName = "chromAccessionResponse", targetNamespace = "http://mutalyzer.nl/2.0/services", className = "es.gbpa.mutalyzerWSClient.ChromAccessionResponse")
    public String chromAccession(
        @WebParam(name = "build", targetNamespace = "http://mutalyzer.nl/2.0/services")
        String build,
        @WebParam(name = "name", targetNamespace = "http://mutalyzer.nl/2.0/services")
        String name);

    /**
     * 
     *         Checks the syntax of a variant.
     * 
     *         @arg variant: The variant to check.
     *         @type variant: string
     * 
     *         @return: Object with fields:
     *                  - valid: A boolean indicating parse result (true for
     *                           succes, false in case of a parse error).
     *                  - messages: List of (error) messages as strings.
     *         @rtype: object
     *         
     * 
     * @param variant
     * @return
     *     returns es.gbpa.mutalyzerWSClient.CheckSyntaxOutput
     */
    @WebMethod(action = "checkSyntax")
    @WebResult(name = "checkSyntaxResult", targetNamespace = "http://mutalyzer.nl/2.0/services")
    @RequestWrapper(localName = "checkSyntax", targetNamespace = "http://mutalyzer.nl/2.0/services", className = "es.gbpa.mutalyzerWSClient.CheckSyntax")
    @ResponseWrapper(localName = "checkSyntaxResponse", targetNamespace = "http://mutalyzer.nl/2.0/services", className = "es.gbpa.mutalyzerWSClient.CheckSyntaxResponse")
    public CheckSyntaxOutput checkSyntax(
        @WebParam(name = "variant", targetNamespace = "http://mutalyzer.nl/2.0/services")
        String variant);

    /**
     * 
     *         Find the gene name associated with a transcript.
     * 
     *         @arg build: The genome build (hg19, hg18, mm10).
     *         @type build: string
     *         @arg accno: The identifier of a transcript.
     *         @type accno: string
     * 
     *         @return: The name of the associated gene.
     *         @rtype: string
     *         
     * 
     * @param accno
     * @param build
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "getGeneName")
    @WebResult(name = "getGeneNameResult", targetNamespace = "http://mutalyzer.nl/2.0/services")
    @RequestWrapper(localName = "getGeneName", targetNamespace = "http://mutalyzer.nl/2.0/services", className = "es.gbpa.mutalyzerWSClient.GetGeneName")
    @ResponseWrapper(localName = "getGeneNameResponse", targetNamespace = "http://mutalyzer.nl/2.0/services", className = "es.gbpa.mutalyzerWSClient.GetGeneNameResponse")
    public String getGeneName(
        @WebParam(name = "build", targetNamespace = "http://mutalyzer.nl/2.0/services")
        String build,
        @WebParam(name = "accno", targetNamespace = "http://mutalyzer.nl/2.0/services")
        String accno);

    /**
     * 
     *         Search for an NM number in the MySQL database, if the version
     *         number matches, the transcription start and end and CDS end
     *         in I{c.} notation is returned.
     * 
     *         @arg LOVD_ver: The LOVD version.
     *         @type LOVD_ver: string
     *         @arg build: The genome build (hg19, hg18, mm10).
     *         @type build: string
     *         @arg accNo: The NM accession number and version.
     *         @type accNo: string
     * 
     *         @return: Complex object:
     *           - trans_start  ; Transcription start in I{c.} notation.
     *           - trans_stop   ; Transcription stop in I{c.} notation.
     *           - CDS_stop     ; CDS stop in I{c.} notation.
     *         @rtype: object
     *         
     * 
     * @param accNo
     * @param lovdVer
     * @param build
     * @return
     *     returns es.gbpa.mutalyzerWSClient.Transcript
     */
    @WebMethod(action = "transcriptInfo")
    @WebResult(name = "transcriptInfoResult", targetNamespace = "http://mutalyzer.nl/2.0/services")
    @RequestWrapper(localName = "transcriptInfo", targetNamespace = "http://mutalyzer.nl/2.0/services", className = "es.gbpa.mutalyzerWSClient.TranscriptInfo")
    @ResponseWrapper(localName = "transcriptInfoResponse", targetNamespace = "http://mutalyzer.nl/2.0/services", className = "es.gbpa.mutalyzerWSClient.TranscriptInfoResponse")
    public Transcript transcriptInfo(
        @WebParam(name = "LOVD_ver", targetNamespace = "http://mutalyzer.nl/2.0/services")
        String lovdVer,
        @WebParam(name = "build", targetNamespace = "http://mutalyzer.nl/2.0/services")
        String build,
        @WebParam(name = "accNo", targetNamespace = "http://mutalyzer.nl/2.0/services")
        String accNo);

    /**
     * 
     *         Lookup HGVS descriptions for a dbSNP rs identifier.
     * 
     *         @arg rs_id: The dbSNP rs identifier, e.g. 'rs9919552'.
     *         @type rs_id: string
     * 
     *         @return: List of HGVS descriptions.
     *         @rtype: list(string)
     *         
     * 
     * @param rsId
     * @return
     *     returns es.gbpa.mutalyzerWSClient.StringArray
     */
    @WebMethod(action = "getdbSNPDescriptions")
    @WebResult(name = "getdbSNPDescriptionsResult", targetNamespace = "http://mutalyzer.nl/2.0/services")
    @RequestWrapper(localName = "getdbSNPDescriptions", targetNamespace = "http://mutalyzer.nl/2.0/services", className = "es.gbpa.mutalyzerWSClient.GetdbSNPDescriptions")
    @ResponseWrapper(localName = "getdbSNPDescriptionsResponse", targetNamespace = "http://mutalyzer.nl/2.0/services", className = "es.gbpa.mutalyzerWSClient.GetdbSNPDescriptionsResponse")
    public StringArray getdbSNPDescriptions(
        @WebParam(name = "rs_id", targetNamespace = "http://mutalyzer.nl/2.0/services")
        String rsId);

    /**
     * 
     *         Extract the HGVS variant description from a reference sequence and an
     *         observed sequence.
     * 
     *         Note that this only works on DNA sequences for now.
     *         
     * 
     * @param observed
     * @param reference
     * @return
     *     returns es.gbpa.mutalyzerWSClient.Allele
     */
    @WebMethod(action = "descriptionExtract")
    @WebResult(name = "descriptionExtractResult", targetNamespace = "http://mutalyzer.nl/2.0/services")
    @RequestWrapper(localName = "descriptionExtract", targetNamespace = "http://mutalyzer.nl/2.0/services", className = "es.gbpa.mutalyzerWSClient.DescriptionExtract")
    @ResponseWrapper(localName = "descriptionExtractResponse", targetNamespace = "http://mutalyzer.nl/2.0/services", className = "es.gbpa.mutalyzerWSClient.DescriptionExtractResponse")
    public Allele descriptionExtract(
        @WebParam(name = "reference", targetNamespace = "http://mutalyzer.nl/2.0/services")
        String reference,
        @WebParam(name = "observed", targetNamespace = "http://mutalyzer.nl/2.0/services")
        String observed);

    /**
     * 
     *         Get the chromosome name, given a transcript identifier (NM number).
     * 
     *         @arg build: The genome build (hg19, hg18, mm10).
     *         @type build: string
     *         @arg acc: The NM accession number (version NOT included).
     *         @type acc: string
     * 
     *         @return: The name of a chromosome.
     *         @rtype: string
     *         
     * 
     * @param build
     * @param acc
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "getchromName")
    @WebResult(name = "getchromNameResult", targetNamespace = "http://mutalyzer.nl/2.0/services")
    @RequestWrapper(localName = "getchromName", targetNamespace = "http://mutalyzer.nl/2.0/services", className = "es.gbpa.mutalyzerWSClient.GetchromName")
    @ResponseWrapper(localName = "getchromNameResponse", targetNamespace = "http://mutalyzer.nl/2.0/services", className = "es.gbpa.mutalyzerWSClient.GetchromNameResponse")
    public String getchromName(
        @WebParam(name = "build", targetNamespace = "http://mutalyzer.nl/2.0/services")
        String build,
        @WebParam(name = "acc", targetNamespace = "http://mutalyzer.nl/2.0/services")
        String acc);

    /**
     * 
     *         Run the Mutalyzer name checker.
     * 
     *         @arg variant: The variant description to check.
     *         @type variant: string
     * 
     *         @return: Object with fields:
     *             - referenceId: Identifier of the reference sequence used.
     *             - sourceId: Identifier of the reference sequence source, e.g. the
     *                 chromosomal accession number and version in case referenceId
     *                 is a  UD reference created as a chromosomal slice.
     *             - sourceAccession: Accession number of the reference sequence
     *                 source (only for genbank references).
     *             - sourceVersion: Version number of the reference sequence source
     *                 (only for genbank references).
     *             - sourceGi: GI number of the reference sequence source (only for
     *                 genbank references).
     *             - molecule: Molecular type of the reference sequence.
     *             - original: Original sequence.
     *             - mutated: Mutated sequence.
     *             - origMRNA: Original transcript sequence.
     *             - mutatedMRNA: Mutated transcript sequence.
     *             - origCDS: Original CDS.
     *             - newCDS: Mutated CDS.
     *             - origProtein: Original protein sequence.
     *             - newProtein: Mutated protein sequence.
     *             - altProtein: Alternative mutated protein sequence.
     *             - errors: Number of errors.
     *             - warnings: Number of warnings.
     *             - summary: Summary of messages.
     *             - chromDescription: Chromosomal description.
     *             - genomicDescription: Genomic description.
     *             - transcriptDescriptions: List of transcript descriptions.
     *             - proteinDescriptions: List of protein descriptions.
     *             - rawVariants: List of raw variants where each raw variant is
     *                 represented by an object with fields:
     *                 - description: Description of the raw variant.
     *                 - visualisation: ASCII visualisation of the raw variant.
     *             - exons: If a transcript is selected, array of ExonInfo objects
     *                 for each exon in the selected transcript with fields:
     *                 - cStart
     *                 - gStart
     *                 - cStop
     *                 - gStop
     *             - messages: List of (error) messages.
     *         
     * 
     * @param variant
     * @return
     *     returns es.gbpa.mutalyzerWSClient.MutalyzerOutput
     */
    @WebMethod(action = "runMutalyzer")
    @WebResult(name = "runMutalyzerResult", targetNamespace = "http://mutalyzer.nl/2.0/services")
    @RequestWrapper(localName = "runMutalyzer", targetNamespace = "http://mutalyzer.nl/2.0/services", className = "es.gbpa.mutalyzerWSClient.RunMutalyzer")
    @ResponseWrapper(localName = "runMutalyzerResponse", targetNamespace = "http://mutalyzer.nl/2.0/services", className = "es.gbpa.mutalyzerWSClient.RunMutalyzerResponse")
    public MutalyzerOutput runMutalyzer(
        @WebParam(name = "variant", targetNamespace = "http://mutalyzer.nl/2.0/services")
        String variant);

    /**
     * 
     *         Get all the transcripts and their info that overlap with a range on a
     *         chromosome.
     * 
     *         @arg build: The genome build (hg19, hg18, mm10).
     *         @type build: string
     *         @arg chrom: A chromosome encoded as "chr1", ..., "chrY".
     *         @type chrom: string
     *         @arg pos1: The first postion of the range.
     *         @type pos1: integer
     *         @arg pos2: The last postion of the range.
     *         @type pos2: integer
     *         @arg method: The method of determining overlap:
     *             - 0 ; Return only the transcripts that completely fall in the range
     *                   [pos1, pos2].
     *             - 1 ; Return all hit transcripts.
     * 
     *         @return: Array of TranscriptMappingInfo objects with fields:
     *                  - name
     *                  - version
     *                  - gene
     *                  - orientation
     *                  - start
     *                  - stop
     *                  - cds_start
     *                  - cds_stop
     *         
     * 
     * @param pos1
     * @param pos2
     * @param method
     * @param build
     * @param chrom
     * @return
     *     returns es.gbpa.mutalyzerWSClient.TranscriptMappingInfoArray
     */
    @WebMethod(action = "getTranscriptsMapping")
    @WebResult(name = "getTranscriptsMappingResult", targetNamespace = "http://mutalyzer.nl/2.0/services")
    @RequestWrapper(localName = "getTranscriptsMapping", targetNamespace = "http://mutalyzer.nl/2.0/services", className = "es.gbpa.mutalyzerWSClient.GetTranscriptsMapping")
    @ResponseWrapper(localName = "getTranscriptsMappingResponse", targetNamespace = "http://mutalyzer.nl/2.0/services", className = "es.gbpa.mutalyzerWSClient.GetTranscriptsMappingResponse")
    public TranscriptMappingInfoArray getTranscriptsMapping(
        @WebParam(name = "build", targetNamespace = "http://mutalyzer.nl/2.0/services")
        String build,
        @WebParam(name = "chrom", targetNamespace = "http://mutalyzer.nl/2.0/services")
        String chrom,
        @WebParam(name = "pos1", targetNamespace = "http://mutalyzer.nl/2.0/services")
        BigInteger pos1,
        @WebParam(name = "pos2", targetNamespace = "http://mutalyzer.nl/2.0/services")
        BigInteger pos2,
        @WebParam(name = "method", targetNamespace = "http://mutalyzer.nl/2.0/services")
        BigInteger method);

    /**
     * 
     *         Get the result of a batch job.
     * 
     *         Input and output file formats for batch jobs are explained on the
     *         website <https://mutalyzer.nl/batch>.
     * 
     *         On error an exception is raised:
     *           - detail: Human readable description of the error.
     *           - faultstring: A code to indicate the type of error.
     *               - EBATCHNOTREADY: The batch job result is not yet ready.
     * 
     *         @arg job_id: Batch job identifier.
     * 
     *         @return: Batch job result file.
     *         
     * 
     * @param jobId
     * @return
     *     returns byte[]
     */
    @WebMethod(action = "getBatchJob")
    @WebResult(name = "getBatchJobResult", targetNamespace = "http://mutalyzer.nl/2.0/services")
    @RequestWrapper(localName = "getBatchJob", targetNamespace = "http://mutalyzer.nl/2.0/services", className = "es.gbpa.mutalyzerWSClient.GetBatchJob")
    @ResponseWrapper(localName = "getBatchJobResponse", targetNamespace = "http://mutalyzer.nl/2.0/services", className = "es.gbpa.mutalyzerWSClient.GetBatchJobResponse")
    public byte[] getBatchJob(
        @WebParam(name = "job_id", targetNamespace = "http://mutalyzer.nl/2.0/services")
        String jobId);

    /**
     * 
     *         Get a list of entries from the local cache created since given date.
     * 
     *         This method is intended to be used by Mutalyzer itself to synchronize
     *         the cache between installations on different servers.
     *         
     * 
     * @param createdSince
     * @return
     *     returns es.gbpa.mutalyzerWSClient.CacheEntryArray
     */
    @WebMethod(action = "getCache")
    @WebResult(name = "getCacheResult", targetNamespace = "http://mutalyzer.nl/2.0/services")
    @RequestWrapper(localName = "getCache", targetNamespace = "http://mutalyzer.nl/2.0/services", className = "es.gbpa.mutalyzerWSClient.GetCache")
    @ResponseWrapper(localName = "getCacheResponse", targetNamespace = "http://mutalyzer.nl/2.0/services", className = "es.gbpa.mutalyzerWSClient.GetCacheResponse")
    public CacheEntryArray getCache(
        @WebParam(name = "created_since", targetNamespace = "http://mutalyzer.nl/2.0/services")
        XMLGregorianCalendar createdSince);

    /**
     * 
     *         Get all the transcripts that overlap with a chromosomal position.
     * 
     *         On error an exception is raised:
     *           - detail       ; Human readable description of the error.
     *           - faultstring: ; A code to indicate the type of error.
     *               - EARG   ; The argument was not valid.
     *               - ERANGE ; An invalid range was given.
     * 
     *         @arg build: The genome build (hg19, hg18, mm10).
     *         @type build: string
     *         @arg chrom: A chromosome encoded as "chr1", ..., "chrY".
     *         @type chrom: string
     *         @arg pos: A position on the chromosome.
     *         @type pos: int
     *         @kwarg versions: If set to True, also include transcript versions.
     *         @type versions: bool
     * 
     *         @return: A list of transcripts.
     *         @rtype: list
     *         
     * 
     * @param versions
     * @param build
     * @param pos
     * @param chrom
     * @return
     *     returns es.gbpa.mutalyzerWSClient.StringArray
     */
    @WebMethod(action = "getTranscripts")
    @WebResult(name = "getTranscriptsResult", targetNamespace = "http://mutalyzer.nl/2.0/services")
    @RequestWrapper(localName = "getTranscripts", targetNamespace = "http://mutalyzer.nl/2.0/services", className = "es.gbpa.mutalyzerWSClient.GetTranscripts")
    @ResponseWrapper(localName = "getTranscriptsResponse", targetNamespace = "http://mutalyzer.nl/2.0/services", className = "es.gbpa.mutalyzerWSClient.GetTranscriptsResponse")
    public StringArray getTranscripts(
        @WebParam(name = "build", targetNamespace = "http://mutalyzer.nl/2.0/services")
        String build,
        @WebParam(name = "chrom", targetNamespace = "http://mutalyzer.nl/2.0/services")
        String chrom,
        @WebParam(name = "pos", targetNamespace = "http://mutalyzer.nl/2.0/services")
        BigInteger pos,
        @WebParam(name = "versions", targetNamespace = "http://mutalyzer.nl/2.0/services")
        Boolean versions);

    /**
     * 
     *         Gives some static application information, such as the current running
     *         version.
     * 
     *         @return: Object with fields:
     *             - version: A string of the current running version.
     *             - versionParts: The parts of the current running version as a list
     *                 of strings.
     *             - releaseDate: The release date for the running version as a
     *                 string, or the empty string in case of a development version.
     *             - nomenclatureVersion: Version of the HGVS nomenclature used.
     *             - nomenclatureVersionParts: The parts of the HGVS nomenclature
     *                 version as a list of strings.
     *             - serverName: The name of the server that is being queried.
     *             - contactEmail: The email address to contact for more information.
     *             - announcement: Announcement body text.
     *             - announcementUrl: URL to go with the announcement for further
     *                 information.
     *         @rtype: object
     *         
     * 
     * @return
     *     returns es.gbpa.mutalyzerWSClient.InfoOutput
     */
    @WebMethod(action = "info")
    @WebResult(name = "infoResult", targetNamespace = "http://mutalyzer.nl/2.0/services")
    @RequestWrapper(localName = "info", targetNamespace = "http://mutalyzer.nl/2.0/services", className = "es.gbpa.mutalyzerWSClient.Info")
    @ResponseWrapper(localName = "infoResponse", targetNamespace = "http://mutalyzer.nl/2.0/services", className = "es.gbpa.mutalyzerWSClient.InfoResponse")
    public InfoOutput info();

    /**
     * 
     *         Todo: documentation, error handling, argument checking, tests.
     *         
     * 
     * @param downStream
     * @param geneSymbol
     * @param upStream
     * @param organism
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "sliceChromosomeByGene")
    @WebResult(name = "sliceChromosomeByGeneResult", targetNamespace = "http://mutalyzer.nl/2.0/services")
    @RequestWrapper(localName = "sliceChromosomeByGene", targetNamespace = "http://mutalyzer.nl/2.0/services", className = "es.gbpa.mutalyzerWSClient.SliceChromosomeByGene")
    @ResponseWrapper(localName = "sliceChromosomeByGeneResponse", targetNamespace = "http://mutalyzer.nl/2.0/services", className = "es.gbpa.mutalyzerWSClient.SliceChromosomeByGeneResponse")
    public String sliceChromosomeByGene(
        @WebParam(name = "geneSymbol", targetNamespace = "http://mutalyzer.nl/2.0/services")
        String geneSymbol,
        @WebParam(name = "organism", targetNamespace = "http://mutalyzer.nl/2.0/services")
        String organism,
        @WebParam(name = "upStream", targetNamespace = "http://mutalyzer.nl/2.0/services")
        BigInteger upStream,
        @WebParam(name = "downStream", targetNamespace = "http://mutalyzer.nl/2.0/services")
        BigInteger downStream);

    /**
     * 
     *         Get all the transcripts that overlap with a range on a chromosome.
     * 
     *         @arg build: The genome build (hg19, hg18, mm10).
     *         @type build: string
     *         @arg chrom: A chromosome encoded as "chr1", ..., "chrY".
     *         @type chrom: string
     *         @arg pos1: The first postion of the range.
     *         @type pos1: integer
     *         @arg pos2: The last postion of the range.
     *         @type pos2: integer
     *         @arg method: The method of determining overlap:
     *             - 0 ; Return only the transcripts that completely fall in the range
     *                   [pos1, pos2].
     *             - 1 ; Return all hit transcripts.
     * 
     *         @return: A list of transcripts.
     *         @rtype: list
     *         
     * 
     * @param pos1
     * @param pos2
     * @param method
     * @param build
     * @param chrom
     * @return
     *     returns es.gbpa.mutalyzerWSClient.StringArray
     */
    @WebMethod(action = "getTranscriptsRange")
    @WebResult(name = "getTranscriptsRangeResult", targetNamespace = "http://mutalyzer.nl/2.0/services")
    @RequestWrapper(localName = "getTranscriptsRange", targetNamespace = "http://mutalyzer.nl/2.0/services", className = "es.gbpa.mutalyzerWSClient.GetTranscriptsRange")
    @ResponseWrapper(localName = "getTranscriptsRangeResponse", targetNamespace = "http://mutalyzer.nl/2.0/services", className = "es.gbpa.mutalyzerWSClient.GetTranscriptsRangeResponse")
    public StringArray getTranscriptsRange(
        @WebParam(name = "build", targetNamespace = "http://mutalyzer.nl/2.0/services")
        String build,
        @WebParam(name = "chrom", targetNamespace = "http://mutalyzer.nl/2.0/services")
        String chrom,
        @WebParam(name = "pos1", targetNamespace = "http://mutalyzer.nl/2.0/services")
        BigInteger pos1,
        @WebParam(name = "pos2", targetNamespace = "http://mutalyzer.nl/2.0/services")
        BigInteger pos2,
        @WebParam(name = "method", targetNamespace = "http://mutalyzer.nl/2.0/services")
        BigInteger method);

    /**
     * 
     *         Get the name of a chromosome, given a chromosome accession number.
     * 
     *         @arg build: The genome build (hg19, hg18, mm10).
     *         @type build: string
     *         @arg accNo: The accession number of a chromosome (NC_...).
     *         @type accNo: string
     * 
     *         @return: The name of a chromosome.
     *         @rtype: string
     *         
     * 
     * @param accNo
     * @param build
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "chromosomeName")
    @WebResult(name = "chromosomeNameResult", targetNamespace = "http://mutalyzer.nl/2.0/services")
    @RequestWrapper(localName = "chromosomeName", targetNamespace = "http://mutalyzer.nl/2.0/services", className = "es.gbpa.mutalyzerWSClient.ChromosomeName")
    @ResponseWrapper(localName = "chromosomeNameResponse", targetNamespace = "http://mutalyzer.nl/2.0/services", className = "es.gbpa.mutalyzerWSClient.ChromosomeNameResponse")
    public String chromosomeName(
        @WebParam(name = "build", targetNamespace = "http://mutalyzer.nl/2.0/services")
        String build,
        @WebParam(name = "accNo", targetNamespace = "http://mutalyzer.nl/2.0/services")
        String accNo);

    /**
     * 
     *         Get the number of entries left for a batch job.
     * 
     *         Input and output file formats for batch jobs are explained on the
     *         website <https://mutalyzer.nl/batch>.
     * 
     *         @arg job_id: Batch job identifier.
     * 
     *         @return: Number of entries left.
     *         
     * 
     * @param jobId
     * @return
     *     returns java.math.BigInteger
     */
    @WebMethod(action = "monitorBatchJob")
    @WebResult(name = "monitorBatchJobResult", targetNamespace = "http://mutalyzer.nl/2.0/services")
    @RequestWrapper(localName = "monitorBatchJob", targetNamespace = "http://mutalyzer.nl/2.0/services", className = "es.gbpa.mutalyzerWSClient.MonitorBatchJob")
    @ResponseWrapper(localName = "monitorBatchJobResponse", targetNamespace = "http://mutalyzer.nl/2.0/services", className = "es.gbpa.mutalyzerWSClient.MonitorBatchJobResponse")
    public BigInteger monitorBatchJob(
        @WebParam(name = "job_id", targetNamespace = "http://mutalyzer.nl/2.0/services")
        String jobId);

}
